---
# Variables here are applicable to all host groups NOT roles

# This sample file generated by generate_group_vars_sample.sh

# Dummy variable to avoid error because ansible does not recognize the
# file as a good configuration file when no variable in it.
dummy:

# You can override vars by using host or group vars

###########
# GENERAL #
###########

fetch_directory: ~/ceph-ansible-keys

#mon_group_name: mons

# ACTIVATE BOTH FSID AND MONITOR_SECRET VARIABLES FOR NON-VAGRANT DEPLOYMENT
fsid: "{{ cluster_uuid.stdout }}"
monitor_secret: "{{ monitor_keyring.stdout }}"

# CephFS
#cephfs_data: cephfs_data
#cephfs_metadata: cephfs_metadata
#cephfs: cephfs

# Secure your cluster
# This will set the following flags on all the pools:
# * nosizechange
# * nopgchange
# * nodelete

#secure_cluster: false
#secure_cluster_flags:
#  - nopgchange
#  - nodelete
#  - nosizechange

# Enable the Calamari-backed REST API on a Monitor
#calamari: false

# Enable debugging for Calamari
#calamari_debug: false

#############
# OPENSTACK #
#############

#openstack_config: false
#openstack_glance_pool:
#  name: images
#  pg_num: "{{ osd_pool_default_pg_num }}"
#openstack_cinder_pool:
#  name: volumes
#  pg_num: "{{ osd_pool_default_pg_num }}"
#openstack_nova_pool:
#  name: vms
#  pg_num: "{{ osd_pool_default_pg_num }}"
#openstack_cinder_backup_pool:
#  name: backups
#  pg_num: "{{ osd_pool_default_pg_num }}"
#openstack_gnocchi_pool:
#  name: metrics
#  pg_num: "{{ osd_pool_default_pg_num }}"

#openstack_pools:
#  - "{{ openstack_glance_pool }}"
#  - "{{ openstack_cinder_pool }}"
#  - "{{ openstack_nova_pool }}"
#  - "{{ openstack_cinder_backup_pool }}"
#  - "{{ openstack_gnocchi_pool }}"


# The value for 'key' can be a pre-generated key,
# e.g key: "AQDC2UxZH4yeLhAAgTaZb+4wDUlYOsr1OfZSpQ=="
# By default, keys will be auto-generated.
#openstack_keys:
#  - { name: client.glance, key: "$(ceph-authtool --gen-print-key)", mon_cap: "mon 'allow r'", osd_cap: "osd 'allow class-read object_prefix rbd_children, allow rwx pool={{ openstack_glance_pool.name }}'" }
#  - { name: client.cinder, key: "$(ceph-authtool --gen-print-key)", mon_cap: "mon 'allow r'", osd_cap: "osd 'allow class-read object_prefix rbd_children, allow rwx pool={{ openstack_cinder_pool.name }}, allow rwx pool={{ openstack_nova_pool.name }}, allow rx pool={{ openstack_glance_pool.name }}'"  }
#  - { name: client.cinder-backup, key: "$(ceph-authtool --gen-print-key)", mon_cap: "mon 'allow r'", osd_cap: "osd 'allow class-read object_prefix rbd_children, allow rwx pool={{ openstack_cinder_backup_pool.name }}'" }
#  - { name: client.gnocchi, key: "$(ceph-authtool --gen-print-key)", mon_cap: "mon 'allow r'", osd_cap: "osd 'allow class-read object_prefix rbd_children, allow rwx pool={{ openstack_gnocchi_pool.name }}'" }
#  - { name: client.openstack, key: "$(ceph-authtool --gen-print-key)", mon_cap: "mon 'allow r'", osd_cap: "osd 'allow class-read object_prefix rbd_children, allow rwx pool=images, allow rwx pool=vms, allow rwx pool=volumes, allow rwx pool=backups'" }

##########
# DOCKER #
##########
#docker_exec_cmd:
#ceph_mon_docker_interface: "{{ monitor_interface }}"
#ceph_mon_docker_subnet: "{{ public_network }}"# subnet of the ceph_mon_docker_interface
#ceph_mon_docker_extra_env: -e CLUSTER={{ cluster }} -e FSID={{ fsid }} -e MON_NAME={{ monitor_name }}
#mon_docker_privileged: false
#mon_docker_net_host: true
#ceph_config_keys: [] # DON'T TOUCH ME

